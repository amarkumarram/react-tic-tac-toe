{"version":3,"sources":["components/Firebase.tsx","components/FormField.tsx","components/GameLeft.tsx","components/GridCell.tsx","components/PlayBoard.tsx","components/RemoteFirstPlayerForm.tsx","components/RemoteSecondPlayerForm.tsx","components/Grid.tsx","components/PageNotFound.tsx","components/EntryForm.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["firebase","apps","length","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","FormField","props","errorMsg","handlePlayerName","playerName","useState","formErrorMsg","setFormErrorMsg","history","useHistory","useEffect","className","autoComplete","to","type","placeholder","onChange","e","name","id","firstPlayerError","secondPlayerError","onClick","firstPlayerName","secondPlayerName","push","pathname","GameLeft","playerPosition","setDocId","newGame","docId","GridCell","clickHandler","cellNumber","data-cell","PlayBoard","resetGame","enableReset","handleCellClick","resultText","clickedCellArr","createNewGame","isRemotely","remoteLink","joinGameStatus","whoReset","copyBtnText","setCopyBtnText","linkCopiedText","navigator","clipboard","writeText","setTimeout","disabled","RemoteFirstPlayerForm","generateLink","isDisabled","RemoteSecondPlayerForm","disableJoinBtn","joinGame","useParams","secondPlayer","setSecondPlayer","showForm","setShowForm","showInvalidError","setShowInvalidError","collection","doc","get","then","exists","docData","data","second_player_name","Grid","player","setIsDisabled","updateClickedCellArr","setResultText","elementRef","setElementRef","setEnableReset","setWhoReset","winnerArr","setWinnerArr","winnerStatus","setWinnerStatus","resetCount","setResetCount","update","left_game","clickedCellArrLength","playerArr","filter","el","index","result","decideWinner","onSnapshot","clicked_cell_arr","elementRefArr","gridCellArr","Array","from","document","getElementsByClassName","i","indexOf","innerHTML","style","backgroundColor","reset_count","reset_by","result_text","arr","response","cellNum","parseInt","target","getAttribute","isNaN","updatedClickedCellArr","tempElementRefArr","resetBy","undefined","PageNotFound","EntryForm","setPlayerName","setErrorMsg","setJoinGameStatus","setPlayerPosition","setRemoteLink","playerNameVal","value","trim","test","first_player_name","generatedLink","add","docRef","window","location","href","exact","path","render","component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3b9dc09d.chunk.js","sourcesContent":["import firebase from 'firebase';\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBiRlApFE8Pylq9ntzqzDyHB9CWP-ZUGnw\",\r\n    authDomain: \"amar-tictactoe.firebaseapp.com\",\r\n    projectId: \"amar-tictactoe\",\r\n    storageBucket: \"amar-tictactoe.appspot.com\",\r\n    messagingSenderId: \"789612009205\",\r\n    appId: \"1:789612009205:web:aa39f2365485fcccd497bc\",\r\n    measurementId: \"G-VVK3LC9ZGC\"\r\n};\r\n// Initialize Firebase\r\nif (!firebase.apps.length) {\r\n    firebase.initializeApp(firebaseConfig);\r\n} else {\r\n    firebase.app(); // if already initialized, use that one\r\n}\r\n\r\n// Export the database for components to use.\r\nexport const db = firebase.firestore();","import { useEffect, useState } from 'react';\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nexport function FormField(props: any) {\r\n\r\n    const { errorMsg, handlePlayerName, playerName } = props;\r\n    const [formErrorMsg, setFormErrorMsg] = useState<any>({ ...errorMsg });\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        setFormErrorMsg({...errorMsg});\r\n    }, [errorMsg]);\r\n\r\n    const handleSubmit = () => {\r\n        if (playerName.firstPlayerName == \"\") {\r\n            setFormErrorMsg({ ...formErrorMsg, firstPlayerError: \"Please enter valid first player name.\" })\r\n        } else if (playerName.secondPlayerName == \"\") {\r\n            setFormErrorMsg({ ...formErrorMsg, secondPlayerError: \"Please enter valid second player name.\" })\r\n        } else {\r\n            setFormErrorMsg({ firstPlayerError: \"\", secondPlayerError: \"\" })\r\n            history.push({\r\n                pathname: \"/play-adjacently\"\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"flexContainer\">\r\n            <form className=\"flexFormContainer\" autoComplete=\"off\">\r\n                <Link to=\"/play-remotely\">Play Remotely</Link>\r\n                <div className=\"turnInfo orSeparator\">OR</div>\r\n                <label>First Player Name:</label>\r\n                <input type=\"text\" placeholder=\"Enter first player name\" onChange={(e) => handlePlayerName(e)} name=\"firstPlayerName\" />\r\n                <div id=\"firstPlayerError\" className=\"error\">{formErrorMsg.firstPlayerError}</div>\r\n                <label>Second Player Name:</label>\r\n                <input type=\"text\" placeholder=\"Enter second player name\" onChange={(e) => handlePlayerName(e)} name=\"secondPlayerName\" />\r\n                <div id=\"secondPlayerError\" className=\"error\">{formErrorMsg.secondPlayerError}</div>\r\n                <button type=\"button\" onClick={() => handleSubmit()}>Play</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { db } from \"./Firebase\";\r\n\r\nexport function GameLeft(props: any) {\r\n\r\n    const { playerName, playerPosition, setDocId, newGame, docId } = props;\r\n\r\n    useEffect(() => {\r\n        setDocId(\"\");\r\n    }, [])\r\n\r\n    const history = useHistory();\r\n\r\n    const createNewGame = () => {\r\n        newGame();\r\n        history.push(\"/react-tic-tac-toe\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                playerPosition == \"first\" ?\r\n                    playerName.secondPlayerName != \"\" && <h1 className=\"turnInfo\">{playerName.secondPlayerName} has left the game!</h1> :\r\n                    playerName.firstPlayerName != \"\" && <h1 className=\"turnInfo\">{playerName.firstPlayerName} has left the game!</h1>\r\n            }\r\n            <h1 className=\"turnInfo zero-margin-top\">Go to <span className=\"menuContainer gameLeft\"><button onClick={() => createNewGame()} >Home</button></span></h1>\r\n        </>\r\n    )\r\n}","export function GridCell(props: any) {\r\n\r\n    const { clickHandler, cellNumber } = props;\r\n\r\n    return <div className=\"gridCell gridCellValue\" onClick={(e) => clickHandler(e)} data-cell={cellNumber} ></div>\r\n}","import { GridCell } from './GridCell';\r\nimport 'three-dots';\r\nimport { useState } from 'react';\r\n\r\nexport function PlayBoard(props: any) {\r\n\r\n    const {\r\n        resetGame,\r\n        enableReset,\r\n        playerName,\r\n        handleCellClick,\r\n        resultText,\r\n        clickedCellArr,\r\n        createNewGame,\r\n        isRemotely,\r\n        remoteLink,\r\n        joinGameStatus,\r\n        playerPosition,\r\n        whoReset\r\n    } = props;\r\n    const { firstPlayerName, secondPlayerName } = playerName;\r\n\r\n    const [copyBtnText, setCopyBtnText] = useState(\"Copy Link\");\r\n    const linkCopiedText = \"Link Copied!\";\r\n\r\n    const copyToClipboard = () => {\r\n        navigator.clipboard.writeText(remoteLink);\r\n        setCopyBtnText(linkCopiedText);\r\n        setTimeout(() => {\r\n            setCopyBtnText(\"Copy Link\");\r\n        }, 2000)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                (isRemotely && !joinGameStatus) &&\r\n                <div className=\"text-center\">\r\n                    <h3 className=\"zero-margin-bottom\">Joinging link:</h3>\r\n                    <h4 className=\"zero-margin-top zero-margin-bottom margin-top-ten\">{remoteLink}</h4>\r\n                    <button onClick={() => copyToClipboard()} disabled={copyBtnText == linkCopiedText} className=\"copy-link margin-top-ten\" >{copyBtnText}</button>\r\n                </div>\r\n            }\r\n            { \r\n                (isRemotely && joinGameStatus && clickedCellArr?.length == 0) ?\r\n                    (playerPosition == \"first\" && playerName.secondPlayerName == whoReset) ? <h2 className=\"turnInfo\">{playerName.secondPlayerName} has reset the game!</h2> : \r\n                    (playerPosition == \"second\" && playerName.firstPlayerName == whoReset) ?\r\n                    <h2 className=\"turnInfo\">{playerName.firstPlayerName} has reset the game!</h2> : \r\n                        \"\" : \r\n                    \"\"\r\n            }\r\n            <div className=\"grandParentGridContainer\">\r\n                {\r\n                    <div className=\"menuContainer\">\r\n                        <button onClick={() => createNewGame()} >New Game</button>\r\n                        <button onClick={() => resetGame()} disabled={!enableReset}>Reset</button>\r\n                    </div>\r\n                }\r\n                <div className=\"parentGridContainer\">\r\n                    <div className=\"parentGridCell\">\r\n                        <h2>First Player</h2>\r\n                        <h3>{firstPlayerName}</h3>\r\n                    </div>\r\n                    <div className=\"gridContainer\">\r\n                        <GridCell clickHandler={handleCellClick} cellNumber=\"1\" />\r\n                        <GridCell clickHandler={handleCellClick} cellNumber=\"2\" />\r\n                        <GridCell clickHandler={handleCellClick} cellNumber=\"3\" />\r\n                        <GridCell clickHandler={handleCellClick} cellNumber=\"4\" />\r\n                        <GridCell clickHandler={handleCellClick} cellNumber=\"5\" />\r\n                        <GridCell clickHandler={handleCellClick} cellNumber=\"6\" />\r\n                        <GridCell clickHandler={handleCellClick} cellNumber=\"7\" />\r\n                        <GridCell clickHandler={handleCellClick} cellNumber=\"8\" />\r\n                        <GridCell clickHandler={handleCellClick} cellNumber=\"9\" />\r\n                    </div>\r\n                    <div className=\"parentGridCell\">\r\n                        <h2>Second Player</h2>\r\n                        <h3>{secondPlayerName}</h3>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    resultText != \"\" ? <h2 className=\"resultInfo\">{resultText}</h2> :\r\n                        (isRemotely && !joinGameStatus) ? \r\n                            <><h4 className=\"turnInfo zero-margin-bottom\">Kindly do not refresh the page.</h4><h4 className=\"turnInfo zero-margin-top zero-margin-bottom\">Waiting for second player to join</h4><div className=\"flex-center-margin\"><div className=\"dot-typing\"></div></div></> :\r\n                        isRemotely ? \r\n                            (playerPosition == \"first\") ?\r\n                                <h2 className=\"turnInfo\">{clickedCellArr?.length % 2 == 0 ? firstPlayerName + \", it's your turn now.\" : secondPlayerName +\" is paying...\"}</h2> :\r\n                                (playerPosition == \"second\") && <h2 className=\"turnInfo\">{clickedCellArr?.length % 2 == 0 ? firstPlayerName +\" is paying...\" : secondPlayerName + \", it's your turn now.\"}</h2> :\r\n                            <h2 className=\"turnInfo\">{clickedCellArr?.length % 2 == 0 ? firstPlayerName : secondPlayerName}, it's your turn now.</h2>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}","export function RemoteFirstPlayerForm(props: any) {\r\n\r\n    const { handlePlayerName, formErrorMsg, generateLink, isDisabled, createNewGame } = props;\r\n\r\n    return (\r\n        <div className=\"flexContainer\">\r\n            <form className=\"flexFormContainer\" autoComplete=\"off\">\r\n                <label>First Player Name:</label>\r\n                <input type=\"text\" placeholder=\"Enter first player name\" onChange={(e) => handlePlayerName(e)} name=\"firstPlayerName\" />\r\n                <div id=\"firstPlayerError\" className=\"error\">{formErrorMsg.firstPlayerError}</div>\r\n                <button type=\"button\" onClick={() => generateLink()} disabled={isDisabled}>Generate Link</button>\r\n                <div className=\"turnInfo orSeparator\">OR</div>\r\n                <button onClick={() => createNewGame()} >Back</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import { useEffect, useState } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { db } from './Firebase';\r\nimport parse from 'html-react-parser';\r\n\r\nexport function RemoteSecondPlayerForm(props: any) {\r\n\r\n    const { handlePlayerName, formErrorMsg, disableJoinBtn, joinGame, playerName } = props;\r\n    const { id }: any = useParams();\r\n    const [linkValidation, setLinkValidation] = useState(\"\");\r\n    const [secondPlayer, setSecondPlayer] = useState(\"\");\r\n    const [showForm, setShowForm] = useState(false);\r\n    const [showInvalidError, setShowInvalidError] = useState(false);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        db.collection('amar-tictactoe').doc(id).get().then((doc) => {\r\n            if (doc.exists) {\r\n                let docData = doc.data();\r\n                let secondPlayerName = docData?.second_player_name;\r\n                setSecondPlayer(secondPlayerName)\r\n                secondPlayerName == \"\" && setShowForm(true);\r\n            } else {\r\n                setShowInvalidError(true);\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    const joinGameTictactoe = (docId: any) => {\r\n        const res = joinGame(docId);\r\n        res == \"success\" && history.push(\"/play-remotely\")\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                secondPlayer !=\"\" ? \r\n                    <>\r\n                        <h1 className='turnInfo'>Link has expired!</h1>\r\n                        <h1 className='turnInfo zero-margin-top zero-margin-bottom'>\r\n                            <Link to='/play-remotely'>Generate New Link</Link>\r\n                        </h1>\r\n                        <div className='turnInfo orSeparator'>OR</div>\r\n                        <h1 className='zero-margin-top'>\r\n                            <Link to='/'>Home</Link>\r\n                        </h1>\r\n                    </> :\r\n                    showForm ? <div className=\"flexContainer\">\r\n                        <form className=\"flexFormContainer\" autoComplete=\"off\">\r\n                            <label>Second Player Name:</label>\r\n                            <input type=\"text\" placeholder=\"Enter second player name\" onChange={(e) => handlePlayerName(e)} name=\"secondPlayerName\" />\r\n                            <div id=\"secondPlayerError\" className=\"error\">{formErrorMsg.secondPlayerError}</div>\r\n                            <button type=\"button\" onClick={() => joinGameTictactoe(id)} disabled={disableJoinBtn}>Join Game</button>\r\n                            <div className=\"turnInfo orSeparator\">OR</div>\r\n                            <Link to=\"/react-tic-tac-toe\">Home</Link>\r\n                        </form>\r\n                    </div> :\r\n                    showInvalidError && \r\n                    <>\r\n                        <h1 className='turnInfo'>Link is invalid!</h1>\r\n                        <h1 className='turnInfo zero-margin-top'>\r\n                            Go to <Link to='/'>Home</Link>\r\n                        </h1>\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}","import { useState, useEffect } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { PlayBoard } from './PlayBoard';\r\nimport { RemoteFirstPlayerForm } from './RemoteFirstPlayerForm';\r\nimport { RemoteSecondPlayerForm } from './RemoteSecondPlayerForm';\r\nimport { db } from './Firebase';\r\n\r\nexport function Grid(props: any) {\r\n    const { playerName, newGame, isRemotely, handlePlayerName, errorMsg, player, joinGame, isDisabled, generateLink, remoteLink, joinGameStatus, playerPosition, docId, setIsDisabled } = props;\r\n    const [clickedCellArr, updateClickedCellArr] = useState<Array<number>>([]);\r\n    const [resultText, setResultText] = useState<string>(\"\");\r\n    const [elementRef, setElementRef] = useState<Array<any>>([]);\r\n    const [enableReset, setEnableReset] = useState<boolean>(false);\r\n    const [whoReset, setWhoReset] = useState<string>(\"\");\r\n    const [winnerArr, setWinnerArr] = useState<Array<number>>([]);\r\n    const [winnerStatus, setWinnerStatus] = useState<string>(\"\");\r\n    const [formErrorMsg, setFormErrorMsg] = useState<any>({ ...errorMsg });\r\n    const [resetCount, setResetCount] = useState<number>(0);\r\n    const history = useHistory();\r\n\r\n    const createNewGame = () => {\r\n        history.push(\"/react-tic-tac-toe\");\r\n        if (isRemotely && docId != \"\") {\r\n            db.collection('amar-tictactoe').doc(docId).update({\r\n                left_game: true\r\n            })\r\n        }\r\n        newGame();\r\n    }\r\n\r\n    useEffect(() => {\r\n        setFormErrorMsg(errorMsg);\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const clickedCellArrLength: number = clickedCellArr?.length;\r\n        if (clickedCellArrLength >= 5) {\r\n            let playerArr: Array<number>;\r\n            //check win-loose-tie\r\n            if (clickedCellArrLength % 2 != 0) {\r\n                //first player\r\n                playerArr = clickedCellArr.filter((el: number, index: number) => {\r\n                    return index % 2 == 0;\r\n                });\r\n            } else {\r\n                //second player\r\n                playerArr = clickedCellArr.filter((el: number, index: number) => {\r\n                    return index % 2 != 0;\r\n                });\r\n            }\r\n            const result: string = decideWinner(playerArr);\r\n            setWinnerStatus(result);\r\n        }\r\n        if (docId != \"\" && isRemotely) {\r\n            db.collection(\"amar-tictactoe\").doc(docId).onSnapshot((doc) => {\r\n                let docData = doc.data();\r\n                updateClickedCellArr(docData?.clicked_cell_arr);\r\n                docData?.clicked_cell_arr.length > 0 && setEnableReset(true);\r\n                let elementRefArr = []\r\n                const gridCellArr = Array.from(document.getElementsByClassName('gridCell') as HTMLCollectionOf<HTMLElement>)\r\n                for (let i = 1; i <= gridCellArr.length; i++) {\r\n                    let index = docData?.clicked_cell_arr.indexOf(i);\r\n                    if (index > -1) {\r\n                        if (index % 2 == 0) {\r\n                            gridCellArr[i - 1].innerHTML = \"<span class='cross'>x</span>\";\r\n                        } else {\r\n                            gridCellArr[i - 1].innerHTML = \"<span>o</span>\";\r\n                        }\r\n                        elementRefArr[i - 1] = [...elementRef, gridCellArr[i - 1]];\r\n                    }else {\r\n                        gridCellArr[i - 1].innerHTML = \"\";\r\n                        gridCellArr[i-1].style.backgroundColor = \"#ffffff\";\r\n                    }\r\n                }\r\n                setElementRef(elementRefArr);\r\n                if(docData?.left_game) {\r\n                    setIsDisabled(false);\r\n                    history.push(\"/game-left\")\r\n                }\r\n                setResetCount(docData?.reset_count);\r\n                setWhoReset(docData?.reset_by)\r\n                clickedCellArrLength == 0 && setEnableReset(false)\r\n                setResultText(docData?.result_text)\r\n            });\r\n        }\r\n    }, [docId, clickedCellArr?.length])\r\n\r\n    const decideWinner = (arr: Array<number>): string => {\r\n        let response = \"nothing\";\r\n        if (arr.indexOf(5) != -1) {\r\n            if (arr.indexOf(1) != -1 && arr.indexOf(9) != -1) {\r\n                response = \"winner\";\r\n                setWinnerArr([1, 5, 9]);\r\n            } else if (arr.indexOf(2) != -1 && arr.indexOf(8) != -1) {\r\n                response = \"winner\";\r\n                setWinnerArr([2, 5, 8]);\r\n            } else if (arr.indexOf(3) != -1 && arr.indexOf(7) != -1) {\r\n                response = \"winner\";\r\n                setWinnerArr([3, 5, 7]);\r\n            } else if (arr.indexOf(4) != -1 && arr.indexOf(6) != -1) {\r\n                response = \"winner\";\r\n                setWinnerArr([4, 5, 6]);\r\n            }\r\n        }\r\n        if (arr.indexOf(1) != -1 && response == \"nothing\") {\r\n            if (arr.indexOf(2) != -1 && arr.indexOf(3) != -1) {\r\n                response = \"winner\";\r\n                setWinnerArr([1, 2, 3]);\r\n            } else if (arr.indexOf(4) != -1 && arr.indexOf(7) != -1) {\r\n                response = \"winner\";\r\n                setWinnerArr([1, 4, 7]);\r\n            }\r\n        }\r\n        if (arr.indexOf(9) != -1 && response == \"nothing\") {\r\n            if (arr.indexOf(3) != -1 && arr.indexOf(6) != -1) {\r\n                response = \"winner\";\r\n                setWinnerArr([3, 6, 9]);\r\n            } else if (arr.indexOf(7) != -1 && arr.indexOf(8) != -1) {\r\n                response = \"winner\";\r\n                setWinnerArr([7, 8, 9]);\r\n            }\r\n        }\r\n        if (response == \"nothing\") {\r\n            setWinnerArr([]);\r\n        }\r\n        return response;\r\n    }\r\n\r\n    const handleCellClick = (e: any) => {\r\n        if (resultText == \"\" && !isRemotely) {\r\n            const cellNum: number = parseInt(e.target.getAttribute(\"data-cell\"));\r\n            if (!isNaN(cellNum) && clickedCellArr.indexOf(cellNum) == -1) {\r\n                const updatedClickedCellArr: Array<number> = [...clickedCellArr, cellNum];\r\n                updateClickedCellArr(updatedClickedCellArr);\r\n                setEnableReset(true);\r\n                const clickedCellArrLength: number = updatedClickedCellArr.length;\r\n                if (clickedCellArrLength % 2 == 0) {\r\n                    e.target.innerHTML = \"<span>o</span>\";\r\n                } else {\r\n                    e.target.innerHTML = \"<span class='cross'>x</span>\";\r\n                }\r\n                const cellIndex = parseInt(e.target.getAttribute(\"data-cell\"));\r\n                let tempElementRefArr = [];\r\n                tempElementRefArr[cellIndex] = e.target;\r\n                setElementRef(tempElementRefArr);\r\n            }\r\n        } else if(resultText == \"\" && (!isRemotely || joinGameStatus) && ((playerPosition == \"first\" && clickedCellArr?.length % 2 == 0) || (playerPosition == \"second\" && clickedCellArr?.length % 2 != 0))) {\r\n            const cellNum: number = parseInt(e.target.getAttribute(\"data-cell\"));\r\n            if (!isNaN(cellNum) && clickedCellArr.indexOf(cellNum) == -1) {\r\n                const updatedClickedCellArr: Array<number> = [...clickedCellArr, cellNum];\r\n                updateClickedCellArr(updatedClickedCellArr);\r\n                setEnableReset(true);\r\n                const clickedCellArrLength: number = updatedClickedCellArr.length;\r\n                if (clickedCellArrLength % 2 == 0) {\r\n                    e.target.innerHTML = \"<span>o</span>\";\r\n                } else {\r\n                    e.target.innerHTML = \"<span class='cross'>x</span>\";\r\n                }\r\n                const cellIndex = parseInt(e.target.getAttribute(\"data-cell\"));\r\n                let tempElementRefArr = [];\r\n                tempElementRefArr[cellIndex] = e.target;\r\n                if (isRemotely) {\r\n                    db.collection('amar-tictactoe').doc(docId).update({\r\n                        clicked_cell_arr: updatedClickedCellArr\r\n                    })\r\n                }\r\n                setElementRef(tempElementRefArr);\r\n            }\r\n        }\r\n    }\r\n\r\n    const resetGame = () => {\r\n        const gridCellArr = Array.from(document.getElementsByClassName('gridCell') as HTMLCollectionOf<HTMLElement>)\r\n        for (let i = 0; i < gridCellArr.length; i++) {\r\n            gridCellArr[i].innerHTML = \"\";\r\n            gridCellArr[i].style.backgroundColor = \"#ffffff\";\r\n        }\r\n        updateClickedCellArr([]);\r\n        setResultText(\"\");\r\n        setElementRef([]);\r\n        setEnableReset(false);\r\n        setWinnerStatus(\"\");\r\n        if (isRemotely) {\r\n            let resetBy = \"\";\r\n            if (playerPosition == \"first\") {\r\n                resetBy = playerName.firstPlayerName;\r\n                setWhoReset(playerName.firstPlayerName);\r\n            } else {\r\n                resetBy = playerName.secondPlayerName;\r\n                setWhoReset(playerName.secondPlayerName);\r\n            }\r\n            db.collection('amar-tictactoe').doc(docId).update({\r\n                clicked_cell_arr: [],\r\n                reset_count: resetCount + 1,\r\n                reset_by: resetBy,\r\n                result_text: \"\"\r\n            })\r\n        } else {\r\n            setResetCount(0);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (winnerStatus == \"winner\") {\r\n            let result = clickedCellArr.length % 2 != 0 ? `${playerName.firstPlayerName} Won!` : `${playerName.secondPlayerName} Won!`;\r\n            isRemotely ? \r\n                result = (playerPosition == \"first\" && clickedCellArr.length % 2 != 0) ? \"You Won!\" : `${playerName.secondPlayerName} Won!` :\r\n                result = (playerPosition == \"second\" && clickedCellArr.length % 2 == 0) ? \"You Won!\" : `${playerName.firstPlayerName} Won!`;\r\n            setResultText(result);\r\n            const gridCellArr = Array.from(document.getElementsByClassName('gridCell') as HTMLCollectionOf<HTMLElement>)\r\n            for (let i = 1; i <= gridCellArr.length; i++) {\r\n                let index = winnerArr.indexOf(i);\r\n                if (index > -1) {\r\n                    gridCellArr[i - 1].style.backgroundColor = \"#66ffff\";\r\n                }\r\n            }\r\n            db.collection('amar-tictactoe').doc(docId).update({\r\n                result_text: result\r\n            })\r\n        } else if (clickedCellArr.length == 9 && winnerStatus == \"nothing\") {\r\n            setResultText(\"Match Draw!\");\r\n            db.collection('amar-tictactoe').doc(docId).update({\r\n                result_text: \"Match Draw!\"\r\n            })\r\n        }\r\n    }, [winnerArr]);\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isRemotely ?\r\n                    (remoteLink == \"\" || remoteLink == undefined) ?\r\n                        player == \"first\" ?\r\n                            <RemoteFirstPlayerForm handlePlayerName={handlePlayerName} formErrorMsg={formErrorMsg} generateLink={generateLink} isDisabled={isDisabled} createNewGame={createNewGame} /> :\r\n                            !joinGameStatus ?\r\n                                <RemoteSecondPlayerForm handlePlayerName={handlePlayerName} formErrorMsg={formErrorMsg} joinGame={joinGame} playerName={playerName} disableJoinBtn={isDisabled} /> :\r\n                                <PlayBoard resetGame={resetGame} enableReset={enableReset} playerName={playerName} handleCellClick={handleCellClick} resultText={resultText} clickedCellArr={clickedCellArr} createNewGame={createNewGame} isRemotely={isRemotely} remoteLink={remoteLink} joinGameStatus={joinGameStatus} playerPosition={playerPosition} whoReset={whoReset} /> :\r\n                        <PlayBoard resetGame={resetGame} enableReset={enableReset} playerName={playerName} handleCellClick={handleCellClick} resultText={resultText} clickedCellArr={clickedCellArr} createNewGame={createNewGame} isRemotely={isRemotely} remoteLink={remoteLink} joinGameStatus={joinGameStatus} playerPosition={playerPosition} whoReset={whoReset} /> :\r\n                    (playerName.firstPlayerName != \"\" && playerName.secondPlayerName != \"\") ?\r\n                        <PlayBoard resetGame={resetGame} enableReset={enableReset} playerName={playerName} handleCellClick={handleCellClick} resultText={resultText} clickedCellArr={clickedCellArr} createNewGame={createNewGame} isRemotely={isRemotely} remoteLink={remoteLink} /> :\r\n                        history.push(\"/react-tic-tac-toe\")\r\n            }\r\n        </>\r\n    )\r\n}","import { Link } from \"react-router-dom\";\r\n\r\nexport function PageNotFound() {\r\n    return(\r\n        <>\r\n            <h1 className=\"turnInfo\">Page Not Found</h1>\r\n            <h1 className=\"turnInfo zero-margin-top\">Go to <Link to=\"/react-tic-tac-toe\">Home</Link></h1>\r\n        </>\r\n    )\r\n}","import { useEffect, useState } from \"react\";\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport { db } from \"./Firebase\";\r\nimport { FormField } from \"./FormField\";\r\nimport { GameLeft } from \"./GameLeft\";\r\nimport { Grid } from \"./Grid\";\r\nimport { PageNotFound } from \"./PageNotFound\";\r\n\r\nexport function EntryForm() {\r\n\r\n    const [playerName, setPlayerName] = useState<any>({ firstPlayerName: \"\", secondPlayerName: \"\" });\r\n    const [errorMsg, setErrorMsg] = useState<any>({ firstPlayerError: \"\", secondPlayerError: \"\" });\r\n    const [isDisabled, setIsDisabled] = useState(false);\r\n    const [joinGameStatus, setJoinGameStatus ] = useState(false);\r\n    const [playerPosition, setPlayerPosition] = useState(\"\");\r\n    const [remoteLink, setRemoteLink] = useState(\"\");\r\n    const [docId, setDocId] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        setPlayerName({ firstPlayerName: \"\", secondPlayerName: \"\" });\r\n        setErrorMsg({ firstPlayerError: \"\", secondPlayerError: \"\" });\r\n    }, []);\r\n\r\n    const handlePlayerName = (e: any) => {\r\n        const playerNameVal: string = e.target.value.trim();\r\n        const playerNameValCheck: boolean = /^[a-z A-Z]+$/.test(playerNameVal);\r\n        if (playerNameValCheck) {\r\n            e.target.name == \"firstPlayerName\" ? setPlayerName({ ...playerName, firstPlayerName: playerNameVal }) :\r\n                setPlayerName({ ...playerName, secondPlayerName: playerNameVal })\r\n            e.target.name == \"firstPlayerName\" ? setErrorMsg({ ...errorMsg, firstPlayerError: \"\" }) :\r\n                setErrorMsg({ ...errorMsg, secondPlayerError: \"\" })\r\n        } else {\r\n            e.target.name == \"firstPlayerName\" ? setPlayerName({ ...playerName, firstPlayerName: \"\" }) :\r\n                setPlayerName({ ...playerName, secondPlayerName: \"\" })\r\n            e.target.name == \"firstPlayerName\" ? setErrorMsg({ ...errorMsg, firstPlayerError: \"Please enter valid first player name.\" }) :\r\n                setErrorMsg({ ...errorMsg, secondPlayerError: \"Please enter valid second player name.\" })\r\n        }\r\n    }\r\n\r\n    const newGame = () => {\r\n        setPlayerName({ firstPlayerName: \"\", secondPlayerName: \"\" });\r\n        setErrorMsg({ firstPlayerError: \"\", secondPlayerError: \"\" });\r\n        setRemoteLink(\"\");\r\n        setIsDisabled(false);\r\n        setJoinGameStatus(false);\r\n        setDocId(\"\");\r\n    }\r\n\r\n    const joinGame = (docId: any) => {\r\n        if (playerName.secondPlayerName == \"\") {\r\n            setErrorMsg({ ...errorMsg, secondPlayerError: \"Please enter valid second player name.\" })\r\n        } else {\r\n            setIsDisabled(true);\r\n            setErrorMsg({ firstPlayerError: \"\", secondPlayerError: \"\" });\r\n            setDocId(docId);\r\n\r\n            db.collection('amar-tictactoe').doc(docId).update({\r\n                second_player_name: playerName.secondPlayerName\r\n            })\r\n\r\n            db.collection('amar-tictactoe').doc(docId).get().then((doc) => {\r\n                let docData = doc.data();\r\n                let firstPlayerName = docData?.first_player_name;\r\n                setPlayerName({ ...playerName, firstPlayerName: firstPlayerName })\r\n            })\r\n            setJoinGameStatus(true);\r\n            setPlayerPosition(\"second\");\r\n        }\r\n    }\r\n\r\n    const generateLink = () => {\r\n        if (playerName.firstPlayerName == \"\") {\r\n            setErrorMsg({ ...errorMsg, firstPlayerError: \"Please enter valid first player name.\" })\r\n        } else {\r\n            setIsDisabled(true);\r\n            setErrorMsg({ firstPlayerError: \"\", secondPlayerError: \"\" });\r\n            //generate remote link\r\n            let generatedLink = \"\";\r\n\r\n            db.collection('amar-tictactoe').add({\r\n                first_player_name: playerName.firstPlayerName,\r\n                second_player_name: \"\",\r\n                clicked_cell_arr: [],\r\n                reset_count: 0,\r\n                reset_by: \"\",\r\n                result_text: \"\",\r\n                left_game: false\r\n            }).then(function (docRef) {\r\n                generatedLink = window.location.href + \"/join/\" + docRef.id;\r\n                setDocId(docRef.id);\r\n                setRemoteLink(generatedLink);\r\n                db.collection(\"amar-tictactoe\").doc(docRef.id).onSnapshot((doc) => {\r\n                    let docData = doc.data();\r\n                    const secondPlayerName = docData?.second_player_name;\r\n                    if(secondPlayerName != \"\") {\r\n                        setPlayerName({ ...playerName, secondPlayerName: secondPlayerName });\r\n                        setJoinGameStatus(true);\r\n                        setPlayerPosition(\"first\");\r\n                    }\r\n                });\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route exact path=\"/react-tic-tac-toe\" render={(props) => <FormField errorMsg={errorMsg} handlePlayerName={handlePlayerName} playerName={playerName} />} />\r\n                <Route exact path=\"/play-adjacently\" render={(props) => <Grid playerName={playerName} newGame={newGame} handlePlayerName={handlePlayerName} errorMsg={errorMsg} isRemotely={false} />} />\r\n                <Route exact path=\"/play-remotely\" render={(props) => <Grid playerName={playerName} newGame={newGame} handlePlayerName={handlePlayerName} errorMsg={errorMsg} isRemotely={true} player=\"first\" joinGame={joinGame} isDisabled={isDisabled} joinGameStatus={joinGameStatus} generateLink={generateLink} remoteLink={remoteLink} playerPosition={playerPosition} docId={docId} setIsDisabled={setIsDisabled} />} />\r\n                <Route exact path=\"/play-remotely/join/:id?\" render={(props) => <Grid playerName={playerName} newGame={newGame} handlePlayerName={handlePlayerName} errorMsg={errorMsg} isRemotely={true} player=\"second\" joinGame={joinGame} isDisabled={isDisabled} joinGameStatus={joinGameStatus} generateLink={generateLink} remoteLink={remoteLink} playerPosition={playerPosition} docId={docId} setIsDisabled={setIsDisabled} />} />\r\n                <Route exact path=\"/game-left\" render={(props) => <GameLeft playerName={playerName} playerPosition={playerPosition} setDocId={setDocId} newGame={newGame} docId={docId} />} />\r\n                <Route exact component={PageNotFound} />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}","import './App.scss';\r\nimport { EntryForm } from './components/EntryForm';\r\n\r\nexport default function App() {\r\n\r\n  return (\r\n    <div className=\"screenCenter\">\r\n      <EntryForm />\r\n    </div>\r\n  );\r\n}","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}